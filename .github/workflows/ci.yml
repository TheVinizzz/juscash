name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: juscash_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci

    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci

    - name: Install Scraper Dependencies
      run: |
        cd scraper
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Lint Backend
      run: |
        cd backend
        npm run lint

    - name: Lint Frontend
      run: |
        cd frontend
        npm run lint

    - name: TypeScript Check Backend
      run: |
        cd backend
        npx tsc --noEmit

    - name: TypeScript Check Frontend
      run: |
        cd frontend
        npx tsc --noEmit

    - name: Build Backend
      run: |
        cd backend
        npm run build

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    - name: Security Audit
      run: |
        cd backend
        npm audit --audit-level moderate
        cd ../frontend
        npm audit --audit-level moderate

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test Docker Build
      run: |
        docker-compose build
        docker-compose config 